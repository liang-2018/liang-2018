<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[node.js创建流媒体服务器]]></title>
    <url>%2F2018%2F10%2F28%2Fnode.js%E5%88%9B%E5%BB%BA%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[系统：linuxnpm安装Ubuntu：123456# 安装 npmsudo apt-get install npm # npm 升级sudo npm install -g npm# 切换到淘宝镜像源npm install -g cnpm --registry=http://registry.npm.taobao.org 安装express1234# 先安装generatorsudo npm install -g express-generator# 安装expresssudo npm instal -g express 通过express创建工程1234# 新建工程express --view=ejs nodeServer# 进入到工程目录cd nodeServer 123456789101112131415161718&lt;!-- 打开 package.json 并在dependencies 添加相关依赖 --&gt; &#123; "name": "nodeServer", "version": "0.0.0", "private": true, "scripts": &#123; "start": "node ./bin/www" &#125;, "dependencies": &#123; "cookie-parser": "~1.4.3", "debug": "~2.6.9", "ejs": "~2.5.7", "express": "~4.16.0", "http-errors": "~1.6.2", "morgan": "~1.9.0", "node-media-server": "~1.4.3" &#125;&#125; 123# 利用npm安装所有依赖npm install # 至此 node.js 环境配置完成 在NodeServer文件夹中新建js文件，如：nodeServerTest.js并设置内容如下123456789101112131415161718const &#123; NodeMediaServer &#125; = require('node-media-server');const config = &#123; rtmp: &#123; port: 1935, chunk_size: 60000, gop_cache: true, ping: 60, ping_timeout: 30 &#125;, http: &#123; port: 8000, allow_origin: '*' &#125;&#125;;var nms = new NodeMediaServer(config);nms.run(); 在该文件夹下终端运行如下指令：12# 以非严格模式运行node --harmony nodeServerTest.js 得到结果如下：至此，node.js已创建服务器，相关端口参数如果后来者不明白，自己百度科普 安装ffmpeg并推送流数据Ubuntu下安装ffmpeg比较方便：1sudo apt-get install ffmpeg 查找摄像头设备：12sudo ls /dev/video*# 若只有一个摄像头，得到的一般是 /dev/video0 ffmpeg推送流12ffmpeg -f video4linux2 -i /dev/video0 -vcodec libx264 -acodec libvo_aacenc -b 1080k -r 33 -preset:v ultrafast -tune:v zerolatency -f flv rtmp://localhost:1935/live/STREAM_NAME# 附注：在Windows系统下，-f后面的参数多为dshow，-i后面的参数video="摄像头名":audio="麦克风名"，在Windows系统中，多为虚拟设备 运行效果如下：参考链接链接备用：（https://oainin.wordpress.com/2018/06/09/nodejs%E5%88%9B%E5%BB%BA%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/）至此在其他主机上能够访问实时流 在网页上访问流数据新建html文件，如：videoPlay.html123456789101112131415&lt;!-- 将192.168.128.112换成服务器实际ip --&gt;&lt;script src="https://cdn.bootcss.com/flv.js/1.4.0/flv.min.js"&gt;&lt;/script&gt;&lt;video id="videoElement" width="720" height="400" controls&gt;&lt;/video&gt;&lt;script&gt; if (flvjs.isSupported()) &#123; var videoElement = document.getElementById('videoElement'); var flvPlayer = flvjs.createPlayer(&#123; type: 'flv', url: 'http://192.168.128.112:8000/live/STREAM_NAME.flv' &#125;); flvPlayer.attachMediaElement(videoElement); flvPlayer.load(); flvPlayer.play(); &#125;&lt;/script&gt; 用浏览器打开该html文件即可实时查看流数据。1、视频延迟比较久，原因暂未知，貌似和缓冲区大小无关2、打开的浏览器用高端点的，需要能够支持html5，否则自己该页面代码3、视频未加载音频，若需加载详情百度ffserver.conf相关配置以及linux音频输入设备查找]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
        <tag>流媒体</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Maven-web项目建立及配置]]></title>
    <url>%2F2018%2F01%2F22%2FMaven-web%E9%A1%B9%E7%9B%AE%E5%BB%BA%E7%AB%8B%E5%8F%8A%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[环境配置eclipse自带Maven一般在eclipse中自带maven通过Windows-&gt;Preference-&gt;Maven-&gt;Installations可以查看其中EMBEDDED为自带的版本，截图如下 图1 使用指定版本官网下载链接 : http://maven.apache.org/download.cgi对于Linux系统： 123456789101112131415sudo mkdir /opt/maven# 解压maven到指定目录sudo tar zxvf apache-maven-×.×.×-bin.tar.gz -C /opt/maven# 配置maven环境sudo gedit /etc/profile# 在文件内容后追加如下内容export M2_HOME=/opt/maven/apache-maven-3.5.0export CLASSPATH=$CLASSPATH:$M2_HOME/libexport PATH=$PATH:$M2_HOME/bin# 保存后使配置文件生效source /etc/profile# 运行以下指令以验证是否安装成功mvn -v# 修改maven源为阿里云及仓库存放路径，以加快下载速度sudo gedit /opt/maven/apache-maven-3.5.0/conf/settings.xml 123456789&lt;!-- 添加或修改 标签在home目录下生成对应文件夹maven/repository --&gt;&lt;localRepository&gt;maven/repository&lt;/localRepository&gt;&lt;!-- # 添加或修改 标签 以修改源 --&gt;&lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;&lt;/mirror&gt; 对于 Windows系统：1、下载对应版本文件2、解压到指定路径 如：D:\Program Files\Apache\maven3、配置环境变量：123456MAVEN_HOME:D:\Program Files\Apache\maven# 追加到Path变量如下内容（注意前面分号问题）%MAVEN_HOME%\bin\# 新开cmd窗口并验证mvn -v# 配置D:\Program Files\Apache\maven\conf\settings.xml 同Ubuntu 通过点击图1 Add 按钮添加指定版本，配置安装路径即可：图2至此，环境配置完成 新建maven项目通过New-&gt;Project 并输入maven，到如下界面：图3路径设置，一般使用默认，也可自己选择图4可以使用默认的archetype，也可自行添加archetype（该操作当前不详述）图5Group Id：唯一就好，个人项目随意Artifact Id：差不多就项目名的意思图6点击finish后项目路径分布如下：图7右击项目选择 Build Path-&gt;Configure Build Path:图8点击 Add Library，添加Server Runtime，如有需要可修改Jre System Library图9点击刷新，红色叉号就消失了。右击，运行，则在浏览器金收入 Hello World！ 页面至此 maven项目建立完成（关于修改 maven项目名，webapp版本暂不详述） 下载jar包在 图7 中可以看到 pom.xml 通过修改该文件并保存，maven会自动下载或添加对应jar包其初始内容如下：123456789101112131415161718192021&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.liang.maven&lt;/groupId&gt; &lt;artifactId&gt;MavenTest&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;name&gt;MavenTest Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;MavenTest&lt;/finalName&gt; &lt;/build&gt;&lt;/project&gt; 百度输入，maven进入其依赖查询官网 : https://mvnrepository.com/ 搜索 如：mysql 并在结果中点击第一个链接：图10点击后会进入版本选择页面，一般我选择使用人数最多的版本，如5.1.6图11点击对应版本链接后，会进入如下页面：图12将图中如下内容复制粘贴到 pom.xml 中的 dependencies 标签内：123456&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.6&lt;/version&gt;&lt;/dependency&gt; 粘贴后，pom.xml 内容如下：12345678910111213141516171819202122232425262728&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.liang.maven&lt;/groupId&gt; &lt;artifactId&gt;MavenTest&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;name&gt;MavenTest Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.6&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;MavenTest&lt;/finalName&gt; &lt;/build&gt;&lt;/project&gt; 点击保存，并等待下载完成，下载进度在Progress中查看，下载完成后，可在项目中查看相应jar包：图13在此项目基础之上，可以轻松下载想要的jar包（如果要拷贝jar包给其他人的话） Maven切换阿里云镜像源修改 $MAVEN_HOME/conf/settings.xml在中添加至如下1234567891011121314151617181920 &lt;mirrors&gt; &lt;!-- mirror | Specifies a repository mirror site to use instead of a given repository. The repository that | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used | for inheritance and direct lookup purposes, and must be unique across the set of mirrors. | &lt;mirror&gt; &lt;id&gt;mirrorId&lt;/id&gt; &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt; &lt;/mirror&gt; --&gt;&lt;mirror&gt; &lt;id&gt;AliMaven&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;&lt;/mirror&gt; &lt;/mirrors&gt; 在eclipse中 Window—&gt;Preference—&gt;Maven—&gt;User Settings 将user setting或者Global Settings路径只想settings.xml,再点击apply即可。settings.xml可以复制到其他路径，只要eclipse设置和settings.xml路径一一对应即可 Maven报错1Failure to transferorg.apache.maven.plugins:maven-surefire-plugin:pom: 报类似错，找到目录 ~/.m2/repository/org/apache/maven/plugins将该目录下所有文件都删除，然后右击项目 Maven—&gt;Update Project 即可其中 ~ 表示用户目录]]></content>
      <categories>
        <category>J2EE</category>
      </categories>
      <tags>
        <tag>maven</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
</search>
